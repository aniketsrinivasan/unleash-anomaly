Initialization:
    VAE = ConvVAE(in_channels=2,
                  z_channels=48,
                  latent_dim=16,
                  image_shape=(32, 32))
Training information:
    1723137169.507658: Called function vae_train with following information:
   args:   []
   kwargs: ["model = ConvVAE(\n  (dropout): Dropout(p=0.2, inplace=False)\n  (encoder): Encoder(\n    (0): Conv2d(2, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (1): ResidualBlock(\n      (groupnorm_1): GroupNorm(8, 8, eps=1e-05, affine=True)\n      (conv_1): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (groupnorm_2): GroupNorm(8, 8, eps=1e-05, affine=True)\n      (conv_2): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (residual_layer): Identity()\n    )\n    (2): Conv2d(8, 8, kernel_size=(3, 3), stride=(2, 2))\n    (3): ResidualBlock(\n      (groupnorm_1): GroupNorm(8, 8, eps=1e-05, affine=True)\n      (conv_1): Conv2d(8, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (groupnorm_2): GroupNorm(8, 16, eps=1e-05, affine=True)\n      (conv_2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (residual_layer): Conv2d(8, 16, kernel_size=(1, 1), stride=(1, 1))\n    )\n    (4): ResidualBlock(\n      (groupnorm_1): GroupNorm(8, 16, eps=1e-05, affine=True)\n      (conv_1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (groupnorm_2): GroupNorm(8, 16, eps=1e-05, affine=True)\n      (conv_2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (residual_layer): Identity()\n    )\n    (5): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2))\n    (6): ResidualBlock(\n      (groupnorm_1): GroupNorm(8, 16, eps=1e-05, affine=True)\n      (conv_1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (groupnorm_2): GroupNorm(8, 16, eps=1e-05, affine=True)\n      (conv_2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (residual_layer): Identity()\n    )\n    (7): ResidualBlock(\n      (groupnorm_1): GroupNorm(8, 16, eps=1e-05, affine=True)\n      (conv_1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (groupnorm_2): GroupNorm(8, 16, eps=1e-05, affine=True)\n      (conv_2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (residual_layer): Identity()\n    )\n    (8): AttentionBlock(\n      (groupnorm): GroupNorm(8, 16, eps=1e-05, affine=True)\n      (attention): SelfAttention(\n        (projection): Linear(in_features=16, out_features=48, bias=True)\n        (ejection): Linear(in_features=16, out_features=16, bias=True)\n        (dropout): Dropout(p=0.2, inplace=False)\n      )\n    )\n    (9): GroupNorm(8, 16, eps=1e-05, affine=True)\n    (10): SiLU()\n    (11): Conv2d(16, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (12): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1))\n  )\n  (layer_mean): Linear(in_features=64, out_features=16, bias=True)\n  (layer_logvar): Linear(in_features=64, out_features=16, bias=True)\n  (layer_reconstruct): Linear(in_features=16, out_features=64, bias=True)\n  (decoder): Decoder(\n    (0): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1))\n    (1): Conv2d(48, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (2): ResidualBlock(\n      (groupnorm_1): GroupNorm(8, 16, eps=1e-05, affine=True)\n      (conv_1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (groupnorm_2): GroupNorm(8, 16, eps=1e-05, affine=True)\n      (conv_2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (residual_layer): Identity()\n    )\n    (3): AttentionBlock(\n      (groupnorm): GroupNorm(8, 16, eps=1e-05, affine=True)\n      (attention): SelfAttention(\n        (projection): Linear(in_features=16, out_features=48, bias=True)\n        (ejection): Linear(in_features=16, out_features=16, bias=True)\n        (dropout): Dropout(p=0.2, inplace=False)\n      )\n    )\n    (4): ResidualBlock(\n      (groupnorm_1): GroupNorm(8, 16, eps=1e-05, affine=True)\n      (conv_1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (groupnorm_2): GroupNorm(8, 16, eps=1e-05, affine=True)\n      (conv_2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (residual_layer): Identity()\n    )\n    (5): ResidualBlock(\n      (groupnorm_1): GroupNorm(8, 16, eps=1e-05, affine=True)\n      (conv_1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (groupnorm_2): GroupNorm(8, 16, eps=1e-05, affine=True)\n      (conv_2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (residual_layer): Identity()\n    )\n    (6): Upsample(scale_factor=2.0, mode='nearest')\n    (7): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (8): ResidualBlock(\n      (groupnorm_1): GroupNorm(8, 16, eps=1e-05, affine=True)\n      (conv_1): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (groupnorm_2): GroupNorm(8, 8, eps=1e-05, affine=True)\n      (conv_2): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (residual_layer): Conv2d(16, 8, kernel_size=(1, 1), stride=(1, 1))\n    )\n    (9): ResidualBlock(\n      (groupnorm_1): GroupNorm(8, 8, eps=1e-05, affine=True)\n      (conv_1): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (groupnorm_2): GroupNorm(8, 8, eps=1e-05, affine=True)\n      (conv_2): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n      (residual_layer): Identity()\n    )\n    (10): Upsample(scale_factor=2.0, mode='nearest')\n    (11): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (12): GroupNorm(8, 8, eps=1e-05, affine=True)\n    (13): SiLU()\n    (14): Conv2d(8, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n  )\n)", 'data_loader = <torch.utils.data.dataloader.DataLoader object at 0x1443e3fa0>', 'valid_loader = <torch.utils.data.dataloader.DataLoader object at 0x1443e3520>', 'optimizer = Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 1e-05\n    maximize: False\n    weight_decay: 0\n)', 'loss_function = None', 'epochs = 15', 'device = cpu', 'verbose = True', 'save_path = stubs/saved_models/large_convvae_v2_01.pt']

DatasetTensor information:
    1723137168.8099709: Called function DatasetTensor.__init__ with following information:
   args:   ['<utils.data_tensor.DatasetTensor object at 0x1443e3ee0>']
   kwargs: ['sqlite_path = z2_databases/stacked_database_2.db', 'skeleton_dict_path = stubs/skeleton_dicts/skeleton_dict_1024', 'table_name = TOPS_80', 'key_column = Key', 'value_column = StatVal', 'start_timestamp = None', 'end_timestamp = None', 'interval_size = 300', 'num_intervals = 2', "kwargs_get_tensor = {'use_other': 'Other', 'ignore_entries': ('SYS:GROUP_TOTALS',), 'image_shape': (32, 32), 'transform': <function torch_transform at 0x1050f81f0>}"]
